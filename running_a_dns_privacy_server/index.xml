<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Running a DNS Privacy server on dnsprivacy.org</title>
    <link>http://dnsprivacy.org/running_a_dns_privacy_server/</link>
    <description>Recent content in Running a DNS Privacy server on dnsprivacy.org</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Jul 2021 17:12:19 +0100</lastBuildDate>
    <atom:link href="http://dnsprivacy.org/running_a_dns_privacy_server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Unbound</title>
      <link>http://dnsprivacy.org/running_a_dns_privacy_server/using_unbound/</link>
      <pubDate>Wed, 21 Jul 2021 13:57:34 +0100</pubDate>
      <guid>http://dnsprivacy.org/running_a_dns_privacy_server/using_unbound/</guid>
      <description>&lt;div class=&#34;notices info&#34; &gt;&lt;p&gt;Use at least version 1.5.5 of Unbound if you want to configure your&#xA;server with a certificate (as support for intermediate certificates was&#xA;introduced in this version).&lt;br&gt;&#xA;Version 1.6.7 or later is recommended.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;config-file&#34;&gt;Config file&lt;/h2&gt;&#xA;&lt;p&gt;An example configuration file for Unbound that runs DNS-over-TLS on port&#xA;853 is below.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;server:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;directory: &amp;#34;/etc/unbound&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;username: unbound&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;chroot: &amp;#34;/etc/unbound&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# logfile: &amp;#34;/etc/unbound/unbound.log&amp;#34;  #uncomment to use logfile.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;pidfile: &amp;#34;/etc/unbound/unbound.pid&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# verbosity: 1      # uncomment and increase to get more logging.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# listen on all interfaces on port 853, answer queries from the local subnet.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;interface: 0.0.0.0@853&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;interface: ::0@853&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;tls-service-key: &amp;#34;&amp;lt;path_to_private_key&amp;gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;tls-service-pem: &amp;#34;&amp;lt;path_to_certifcate_file&amp;gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;tls-port: 853&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;incoming-num-tcp: 1000 # Number of simultaneous incoming TCP connections per thread to allow&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Listen on UDP but still issues queries upstream over UDP. &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Only available in 1.6.7 and later&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;do-udp: no&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;udp-upstream-without-downstream: yes &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;qname-minimisation: yes # Enable QNAME minimisation to increase client privacy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;notices infoblock&#34; &gt;&lt;p&gt;Depending on how your certificate is issued you may to add the&#xA;intermediate certificate to your certificate file for clients to be able&#xA;to validate. For example, if you use Let&amp;rsquo;s encrypt to create your&#xA;certificate you will need to add the intermediate certificate (found in&#xA;the &lt;code&gt;/etc/letsencrypt/certs/000&amp;lt;N&amp;gt;_chain.pem &lt;/code&gt;file) to the cert file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Knot Resolver</title>
      <link>http://dnsprivacy.org/running_a_dns_privacy_server/using_knot_resolver/</link>
      <pubDate>Wed, 21 Jul 2021 14:01:03 +0100</pubDate>
      <guid>http://dnsprivacy.org/running_a_dns_privacy_server/using_knot_resolver/</guid>
      <description>&lt;h2 id=&#34;config-file&#34;&gt;Config file&lt;/h2&gt;&#xA;&lt;p&gt;An example configuration file for Knot that runs DNS-over-TLS on port&#xA;853 is below.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- Default empty Knot DNS Resolver configuration in -*- lua -*-&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- Bind ports as privileged user (root) --&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- net = { &amp;#39;127.0.0.1&amp;#39;, &amp;#39;::1&amp;#39;, net.ens160 }&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;net.tls(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/sinodun/certs/fullchain.pem&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/sinodun/certs/privkey.pem&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;net.listen(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;::&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;853&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;net.listen(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;145.100.185.17&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;853&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- Switch to unprivileged user --&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;knot-resolver&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;knot-resolver&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- Unprivileged&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- cache.size = 100*MB&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- verbose(true)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;If you are using systemd with socket-based activation you need to remove&#xA;the net.listen lines above and instead run&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    systemctl edit kresd&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tls.socket. &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; put  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [Socket]. &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ListenStream&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;145.100.185.17&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;853&lt;/span&gt;   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ListenStream&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2001&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;610&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;ba:&lt;span style=&#34;color:#ae81ff&#34;&gt;145&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;]:&lt;span style=&#34;color:#ae81ff&#34;&gt;853&lt;/span&gt;   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in the override file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using dnsdist</title>
      <link>http://dnsprivacy.org/running_a_dns_privacy_server/using_dnsdist/</link>
      <pubDate>Wed, 21 Jul 2021 14:07:34 +0100</pubDate>
      <guid>http://dnsprivacy.org/running_a_dns_privacy_server/using_dnsdist/</guid>
      <description>&lt;p&gt;Below is a simple configuration for setting up dnsdist as a server&#xA;offering both DoT and DoH&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addACL(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.0.0.0/0&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addACL(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;::/0&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addLocal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.0.0.0:53&amp;#39;&lt;/span&gt;,{doTCP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, reusePort&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, tcpFastOpenSize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X})        &lt;span style=&#34;color:#75715e&#34;&gt;-- for dns over port 53 ipv4 , set X(int) for tcp fast open queue size&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addLocal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[::]:53&amp;#39;&lt;/span&gt;,   {doTCP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, reusePort&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, tcpFastOpenSize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X})        &lt;span style=&#34;color:#75715e&#34;&gt;-- for dns over port 53 ipv6 , set X(int) for tcp fast open queue size&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addTLSLocal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Path/fullchain.pem&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Path/privkey.pem&amp;#34;&lt;/span&gt;,{ doTCP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, reusePort&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, tcpFastOpenSize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X })      &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- path for certs and listen address for DoT ipv4 , by default listens on port 853. Set X(int) for tcp fast open queue size.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addTLSLocal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[::]&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Path/fullchain.pem&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Path/privkey.pem&amp;#34;&lt;/span&gt;,{ doTCP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, reusePort&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, tcpFastOpenSize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X })         &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- path for certs and listen address for DoT ipv6 , by default listens on port 853. Set X(int) for tcp fast open queue size.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addDOHLocal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[::]:443&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Path/fullchain.pem&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Path/privkey.pem&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/dns-query&amp;#34;&lt;/span&gt;, { doTCP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, reusePort&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, tcpFastOpenSize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X })        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- path for certs and listen address for DoH. Set X(int) for tcp fast open queue size.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addAction(MaxQPSIPRule(X), DropAction())    &lt;span style=&#34;color:#75715e&#34;&gt;-- set X(int) number of queries to be allowed per second from a IP&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addAction(AndRule({QTypeRule(dnsdist.ANY), TCPRule(&lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;)}), DropAction())  &lt;span style=&#34;color:#75715e&#34;&gt;-- drop ANY queries sent over udp , not useful for DoT and DoH only servers.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newPacketCache(X, &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;)      &lt;span style=&#34;color:#75715e&#34;&gt;-- set X number of entries to be in dnsdist cache by default , memory will be preallocated based on the X number&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;getPool(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;):setCache(pc)              &lt;span style=&#34;color:#75715e&#34;&gt;-- deafult cache&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setServerPolicy(leastOutstanding)       &lt;span style=&#34;color:#75715e&#34;&gt;-- server policy to choose the downstream servers for recursion&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;newServer({address&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1:1111&amp;#34;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolver1&amp;#34;&lt;/span&gt;})     &lt;span style=&#34;color:#75715e&#34;&gt;-- downstream servers for recursion&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;newServer({address&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1:2222&amp;#34;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolver2&amp;#34;&lt;/span&gt;})     &lt;span style=&#34;color:#75715e&#34;&gt;-- downstream servers for recursion&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setMaxUDPOutstanding(&lt;span style=&#34;color:#ae81ff&#34;&gt;65535&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setMaxTCPClientThreads(X)           &lt;span style=&#34;color:#75715e&#34;&gt;-- set X(int) to handle number of maximum tcp clients&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setMaxTCPConnectionDuration(X)      &lt;span style=&#34;color:#75715e&#34;&gt;-- set X(int) for tcp connection duaration from a connected client. X is number of seconds.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setMaxTCPConnectionsPerClient(X)    &lt;span style=&#34;color:#75715e&#34;&gt;-- set X(int) for number of tcp connections from a single client. Useful for rate limiting the concurrent connections.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setMaxTCPQueriesPerConnection(X)    &lt;span style=&#34;color:#75715e&#34;&gt;-- set X(int) , similiar to addAction(MaxQPSIPRule(X), DropAction())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Monitoring Privacy servers</title>
      <link>http://dnsprivacy.org/running_a_dns_privacy_server/monitoring_privacy_servers/</link>
      <pubDate>Wed, 21 Jul 2021 17:12:19 +0100</pubDate>
      <guid>http://dnsprivacy.org/running_a_dns_privacy_server/monitoring_privacy_servers/</guid>
      <description>&lt;h2 id=&#34;dns-over-tls&#34;&gt;DNS-over-TLS&lt;/h2&gt;&#xA;&lt;p&gt;If you want to monitor the TLS specific or DNS Privacy specific features&#xA;of a recursive server then there are a couple of options:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A new tool&#xA;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/getdnsapi/getdns/tree/develop/src/tools&#34;&gt;getdns_server_mon&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&#xA;is being developed which will provide output in both human readable&#xA;and Nagios API compatible form. This tool was included in the 1.4.0&#xA;release of &lt;a href=&#34;https://getdnsapi.net/&#34;&gt;getdns&lt;/a&gt;. &#xA;&lt;ul&gt;&#xA;&lt;li&gt;This tool is used on the &lt;a href=&#34;http://dnsprivacy.org&#34;&gt;dnsprivacy.org&lt;/a&gt;&#xA;t&lt;a href=&#34;https://github.com/dnsprivacy/dnsprivacy-monitoring/blob/main/RESULTS.md&#34;&gt;est server monitoring&#xA;page&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Stephane Bortzmeyer developed a standalone plugin based on getdns&#xA;which inspired the above tool. His plugin is &lt;a href=&#34;https://github.com/bortzmeyer/monitor-dns-over-tls&#34;&gt;available&#xA;here.&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
